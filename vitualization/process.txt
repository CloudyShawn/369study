------------ INTRO -------------

Definition of Process:
	A running program

CPU Virtualization:
	Allows multiple processes to run on a single CPU
	Requires a technique of splitting up CPU resource
		Time-Sharing
			Way to split the time spent on the CPU fairly between the processes
	Needs Mechanicsms & Policies
		Mechanisms are low-level methods or protocols that perform some functionality
			e.x. context switch
		Policies are algorithms to make decisions
			e.x. scheduling policy

Machine State:
	What a program can read or update when its running
		Memory
			Address space
		Registers
			Common ones include:
				PC (program counter)
					Points to the current instruction being executed
				Stack Pointer
				Frame Pointer
		I/O information

Process API includes:
	Create
		Application Icon / Shell command / fork
	Destroy
		X button / kill
	Wait
		Makes a process wait
	Status
		process information and current status
	Miscellaneous Control
		such as suspend

Process Creation:
	1. Load static code from disk/ssd into memory
			Old OS would load entirely before running the program (Eagerly)
			Today they load only as parts are needed (Lazily)
				Refer to [Paging && Swapping]
	2. Memory allocation for stack
			local variables, function parameters, return addresses...
			OS will initialize stack with arguments like argc && argv for main()
	3. Memory allocation for heap
			used for explicitly requested dynamically allocated data
			used by calling malloc() & free()
	4. Other initialization tasks
			Initialize file descriptors for STD_IN, STD_OUT and STD_ERROR
			I/O setup basically
	5. Process is given control by OS
			Process is ready and waiting to run

Process States:
	Running
		actively executing instructions on CPU
	Ready
		Waiting for OS to pick it to run on CPU
	Blocked
		Process not ready to run because waiting for something
			usually I/O stuff
	Initial
		"Process is being created" state
	Final / Zombie
		Finished process that hasn't been cleaned yet

Scheduled:
	being moved from ready to running
Descheduled:
	being moved from running to ready

Data Structures:
	Process List
		some sort of list to track all the ready processes
		tracks info on currently running process
		tracks blocked processes for monitoring the required event
	Register Context
		holds the contents of its register state (one for each process)
			saves all needed registers to resume once scheduled
		Contect Switch:
			Mechanism to switch out register context from previous to new process
	Process Control Block (PCB)
		contains information about each process



------------ PROCESS API -------------

fork()
	creates new process

exec()

wait()